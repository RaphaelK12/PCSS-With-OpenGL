#version 330 core

layout(location = 0) in vec3 vertex_position;
layout(location = 1) in vec3 normal;

// Values that stay constant for the whole mesh.
uniform mat4 MODEL;
uniform mat4 VIEW;
uniform mat4 PROJECTION;
uniform mat4 LIGHTSPACE;
uniform vec3 LIGHT_POS;

//output
out vec3 FragPos;
out vec3 Normal;
out vec4 FragLightSpace;


void main(){
    vec4 world_pos = MODEL * vec4(vertex_position, 1);
    
    FragPos = vec3((world_pos.x), (world_pos.y), (world_pos.z));
    Normal = mat3(transpose(inverse(MODEL))) * normal;
    
    FragLightSpace = LIGHTSPACE * vec4(FragPos, 1.0);
    
    gl_Position = PROJECTION * VIEW *  MODEL * vec4((vertex_position.x), (vertex_position.y), (vertex_position.z), 1);
    
}

